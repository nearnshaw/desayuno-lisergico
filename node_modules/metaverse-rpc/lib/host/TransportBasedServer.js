import { Server } from '../common/json-rpc/Server';
export class TransportBasedServer extends Server {
    constructor(transport, opt = {}) {
        super(opt);
        this.transport = transport;
        if (!this.transport) {
            throw new TypeError('transport cannot be undefined or null');
        }
        this.transport.onMessage(msg => {
            this.processMessage(this.transport, msg);
        });
        if (this.transport.onError) {
            this.transport.onError(err => this.emit('error', err));
        }
        if (this.transport.onClose) {
            this.transport.onClose(() => this.disable());
        }
    }
    sendMessage(receiver, message) {
        receiver.sendMessage(message);
    }
    getAllClients() {
        return [this.transport];
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVHJhbnNwb3J0QmFzZWRTZXJ2ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaG9zdC9UcmFuc3BvcnRCYXNlZFNlcnZlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sMkJBQTJCLENBQUE7QUFHbEQsTUFBTSwyQkFBNEIsU0FBUSxNQUEwQjtJQUNsRSxZQUFtQixTQUE2QixFQUFFLE1BQW1CLEVBQUU7UUFDckUsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFBO1FBRE8sY0FBUyxHQUFULFNBQVMsQ0FBb0I7UUFHOUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUU7WUFDbkIsTUFBTSxJQUFJLFNBQVMsQ0FBQyx1Q0FBdUMsQ0FBQyxDQUFBO1NBQzdEO1FBRUQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDN0IsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLEdBQUcsQ0FBQyxDQUFBO1FBQzFDLENBQUMsQ0FBQyxDQUFBO1FBRUYsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sRUFBRTtZQUMxQixJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUE7U0FDdkQ7UUFFRCxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxFQUFFO1lBQzFCLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFBO1NBQzdDO0lBQ0gsQ0FBQztJQUVELFdBQVcsQ0FBQyxRQUE0QixFQUFFLE9BQWU7UUFDdkQsUUFBUSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQTtJQUMvQixDQUFDO0lBRUQsYUFBYTtRQUNYLE9BQU8sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUE7SUFDekIsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2VydmVyIH0gZnJvbSAnLi4vY29tbW9uL2pzb24tcnBjL1NlcnZlcidcbmltcG9ydCB7IElTZXJ2ZXJPcHRzLCBTY3JpcHRpbmdUcmFuc3BvcnQgfSBmcm9tICcuLi9jb21tb24vanNvbi1ycGMvdHlwZXMnXG5cbmV4cG9ydCBjbGFzcyBUcmFuc3BvcnRCYXNlZFNlcnZlciBleHRlbmRzIFNlcnZlcjxTY3JpcHRpbmdUcmFuc3BvcnQ+IHtcbiAgY29uc3RydWN0b3IocHVibGljIHRyYW5zcG9ydDogU2NyaXB0aW5nVHJhbnNwb3J0LCBvcHQ6IElTZXJ2ZXJPcHRzID0ge30pIHtcbiAgICBzdXBlcihvcHQpXG5cbiAgICBpZiAoIXRoaXMudHJhbnNwb3J0KSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCd0cmFuc3BvcnQgY2Fubm90IGJlIHVuZGVmaW5lZCBvciBudWxsJylcbiAgICB9XG5cbiAgICB0aGlzLnRyYW5zcG9ydC5vbk1lc3NhZ2UobXNnID0+IHtcbiAgICAgIHRoaXMucHJvY2Vzc01lc3NhZ2UodGhpcy50cmFuc3BvcnQsIG1zZylcbiAgICB9KVxuXG4gICAgaWYgKHRoaXMudHJhbnNwb3J0Lm9uRXJyb3IpIHtcbiAgICAgIHRoaXMudHJhbnNwb3J0Lm9uRXJyb3IoZXJyID0+IHRoaXMuZW1pdCgnZXJyb3InLCBlcnIpKVxuICAgIH1cblxuICAgIGlmICh0aGlzLnRyYW5zcG9ydC5vbkNsb3NlKSB7XG4gICAgICB0aGlzLnRyYW5zcG9ydC5vbkNsb3NlKCgpID0+IHRoaXMuZGlzYWJsZSgpKVxuICAgIH1cbiAgfVxuXG4gIHNlbmRNZXNzYWdlKHJlY2VpdmVyOiBTY3JpcHRpbmdUcmFuc3BvcnQsIG1lc3NhZ2U6IHN0cmluZykge1xuICAgIHJlY2VpdmVyLnNlbmRNZXNzYWdlKG1lc3NhZ2UpXG4gIH1cblxuICBnZXRBbGxDbGllbnRzKCkge1xuICAgIHJldHVybiBbdGhpcy50cmFuc3BvcnRdXG4gIH1cbn1cbiJdfQ==